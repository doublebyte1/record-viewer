{"version":3,"sources":["components/userView.js","App.js","index.js"],"names":["baseUrl","UserView","props","addMarker","e","console","log","markers","state","push","latlng","setState","records","title","description","contactPoint","type","url","filter","event","this","target","value","fetch","then","res","json","newRecords","features","properties","getAvatar","created","catch","error","getRecords","Math","random","record","lat","extent","spatial","bbox","lng","genDelta","refs","map","leafletElement","flyTo","rnd","className","key","id","onClick","handleClick","src","alt","name","Map","ref","center","zoom","TileLayer","attribution","position","idx","Marker","Popup","placeholder","aria-label","aria-describedby","onChange","handleInputChange","handleSubmit","renderProjectItem","React","Component","App","projects","ReactDOM","render","document","getElementById"],"mappings":"4XAMMA,EAAQ,iCAkNCC,E,YA7Mb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAeRC,UAAY,SAACC,GACXC,QAAQC,IAAI,cADK,IAEVC,EAAW,EAAKC,MAAhBD,QACPA,EAAQE,KAAKL,EAAEM,QACfL,QAAQC,IAAIF,EAAEM,QACd,EAAKC,SAAS,CAACJ,aAnBf,EAAKC,MAAQ,CACXI,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,KAAM,GACNC,IAAK,GACLC,OAAO,GACPX,QAAS,IAVM,E,+EAwBDY,GAEhBC,KAAKT,SAAS,CACZO,OAAQC,EAAME,OAAOC,U,iCAIdL,GAAM,IAAD,OACdM,MAAMN,GACHO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,EAAKhB,SAAS,CAAEC,QAASe,EAAWC,WACpC,EAAKjB,SAAS,CAACE,MAAO,EAAKL,MAAMI,QAAQ,GAAGiB,WAAWhB,QACvD,EAAKF,SAAS,CAACG,YAAa,EAAKN,MAAMI,QAAQ,GAAGiB,WAAWf,cAC7D,EAAKH,SAAS,CAACM,IAAK,EAAKa,cACzB,EAAKnB,SAAS,CAACoB,QAAS,EAAKvB,MAAMI,QAAQ,GAAGiB,WAAtB,UACxB,EAAKlB,SAAS,CAACI,aAAc,EAAKP,MAAMI,QAAQ,GAAGiB,WAAWd,eAC9D,EAAKJ,SAAS,CAACK,KAAM,EAAKR,MAAMI,QAAQ,GAAGiB,WAAWb,UAGvDgB,OAAM,SAAAC,S,qCASPb,KAAKc,WAAiC,KAAtBd,KAAKZ,MAAMU,OAAX,UACXlB,EADW,wBA1DL,aA0DK,oBACkCoB,KAAKZ,MAAMU,QAD7C,UAEXlB,EAFW,wBA1DL,aA0DK,wBAzDV,Q,0CAkERoB,KAAKc,WAAL,UAAmBlC,EAAnB,wBAnEa,aAmEb,wBAlEQ,Q,iCAuER,OAAOmC,KAAKC,W,kCAIFC,GAKVhC,QAAQC,IAAI+B,GACZ,IAAM3B,EAAS,CAAC4B,IAAKD,EAAOR,WAAWU,OAAOC,QAAQC,KAAK,GAAG,GAAIC,IAAKL,EAAOR,WAAWU,OAAOC,QAAQC,KAAK,GAAG,GAAIrB,KAAKuB,YACzHtC,QAAQC,IAAII,GAPM,IAUXH,EAAWa,KAAKZ,MAAhBD,QAMP,OALAA,EAAQE,KAAKC,GACbU,KAAKT,SAAS,CAACJ,YACAa,KAAKwB,KAAKC,IAAIC,eACrBC,MAAMrC,EAAQ,IAEfU,KAAKT,SAAS,CACnBE,MAAOwB,EAAOR,WAAWhB,MACzBC,YAAauB,EAAOR,WAAWf,YAC/BG,IAAKG,KAAKU,YACVC,QAASM,EAAOR,WAAP,QACTd,aAAcsB,EAAOR,WAAP,aACdb,KAAMqB,EAAOR,WAAP,S,kCAYR,IAAMmB,EAAIb,KAAKC,SACf,OAAIY,EAAM,GACD,+DACEA,EAAM,GACR,iEACEA,EAAM,GACR,oEACEA,EAAM,GACR,oEAEA,wE,0CAIU,IAAD,OAGlB,OAAO5B,KAAKZ,MAAMI,QAAQiC,KAAI,SAAAR,GAC5B,OACE,yBACEY,UAAU,eAAgBC,IAAKb,EAAOc,GACtCC,QAAS,WACP,EAAKC,YAAYhB,KAGnB,yBAAKiB,IAAK,EAAKxB,YAAayB,IAAKlB,EAAOR,WAAWhB,QACnD,4BAAKwB,EAAOR,WAAWhB,OACvB,2CAAiBwB,EAAOR,WAAWf,aACnC,4CAAkBuB,EAAOR,WAAWd,aAAayC,MACjD,uCAAanB,EAAOR,WAAP,SACb,oCAAUQ,EAAOR,WAAP,Y,+BAOR,IAAD,OACP,OAEE,6BAEE,yBAAKoB,UAAU,oBAIb,yBAAKE,GAAG,iBAIN,kBAACM,EAAA,EAAD,CAAKC,IAAI,MAAMC,OAAQ,CAAC,WAAY,UAAWC,KAAM,GAAIR,QAAShC,KAAKjB,WACrE,kBAAC0D,EAAA,EAAD,CACE5C,IAAI,qEACJ6C,YAAY,8OAEb1C,KAAKZ,MAAMD,QAAQsC,KAAI,SAACkB,EAAUC,GAAX,OACxB,kBAACC,EAAA,EAAD,CAAQf,IAAG,iBAAYc,GAAOD,SAAUA,GACtC,kBAACG,EAAA,EAAD,KACE,oDAUN,yBAAKf,GAAG,SACN,wBAAIA,GAAG,iBAAiB/B,KAAKZ,MAAMK,OACnC,uBAAGsC,GAAG,gBAAgB/B,KAAKZ,MAAMM,aACjC,uBAAGqC,GAAG,mBAAmB/B,KAAKZ,MAAMuB,YAO1C,yBAAKkB,UAAU,kBAEb,yBAAKA,UAAU,oBAEf,2BAAOjC,KAAK,OAAOiC,UAAU,8BAA8BkB,YAAY,GAAGC,aAAW,GAAGC,mBAAiB,eAAeb,KAAK,QAAQc,SAAU,SAAAlE,GAAC,OAAI,EAAKmE,kBAAkBnE,MAC3K,yBAAK6C,UAAU,uBACX,4BAAQA,UAAU,uBAAuBjC,KAAK,SAASoC,QAAS,SAAChD,GAAD,OAAO,EAAKoE,aAAapE,KAAzF,aASN,yBAAK+C,GAAG,gBAAgB/B,KAAKqD,0B,GAxMdC,IAAMC,WCuBdC,G,kBA5Bb,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KACDM,MAAQ,CAAEI,QAAS,IAFP,E,iFAOE,IAAD,OAClBW,MAAM,sEACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJ,EAAKhB,SAAS,CAAEC,QAASe,OAG1BK,OAAM,SAAAC,S,+BAMT,OACE,6BACG,kBAAC,EAAD,CAAUrB,QAASQ,KAAKZ,MAAMI,QAAQgB,SAAUiD,SAAUzD,KAAKZ,MAAMqE,gB,GAxB5DH,IAAMC,YCCxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c2726bd5.chunk.js","sourcesContent":["import React from \"react\";\n//import FeatureSection from \"./featureSection\";\nimport \"./userView.css\";\nimport \"./featureSection.css\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\n\nconst baseUrl='https://emotional.byteroad.net';\nconst collection=\"ec_catalog\";\nconst limit=100;\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: [],\n      title: \"\",\n      description: \"\",\n      contactPoint: \"\",\n      type: \"\",\n      url: \"\",\n      filter:\"\",\n      markers: []\n    };\n  }\n\n\n  // Add a marker to the map, by clicking on it\n  addMarker = (e) => {\n    console.log(\"comes here\");\n    const {markers} = this.state\n    markers.push(e.latlng)\n    console.log(e.latlng);\n    this.setState({markers})\n  }  \n  \n  handleInputChange(event) {\n\n    this.setState({\n      filter: event.target.value\n    });\n  }\n\n  getRecords(url) {\n    fetch(url)\n      .then(res => res.json())\n      .then(newRecords => {\n        // upon success, update tasks\n        this.setState({ records: newRecords.features });\n        this.setState({title: this.state.records[0].properties.title});\n        this.setState({description: this.state.records[0].properties.description});\n        this.setState({url: this.getAvatar()});\n        this.setState({created: this.state.records[0].properties['created']});\n        this.setState({contactPoint: this.state.records[0].properties.contactPoint});\n        this.setState({type: this.state.records[0].properties.type});\n        //console.log(this.state.records);\n      })\n      .catch(error => {\n        // upon failure, show error message\n      });\n\n    \n  }\n\n  handleSubmit() {\n    \n      this.getRecords(this.state.filter !== ''?\n        `${baseUrl}/collections/${collection}/items?q=${this.state.filter}`:\n        `${baseUrl}/collections/${collection}/items?limit=${limit}`);\n\n    \n  }\n\n\n  componentDidMount() {\n    this.getRecords(`${baseUrl}/collections/${collection}/items?limit=${limit}`);\n  }\n\n  genDelta() {\n\n    return Math.random();\n  }\n\n  /* step 3 */\n  handleClick(record) {\n\n/*\n    const latlng = {lat: record.geometry.coordinates[1], lng: record.geometry.coordinates[0]};\n*/\n    console.log(record);\n    const latlng = {lat: record.properties.extent.spatial.bbox[0][1], lng: record.properties.extent.spatial.bbox[0][0]+ this.genDelta()};\n    console.log(latlng);\n    //console.log(this.genDelta());\n\n    const {markers} = this.state\n    markers.push(latlng)\n    this.setState({markers})\n    let mapInst =  this.refs.map.leafletElement;\n    mapInst.flyTo(latlng, 12);\n\n    return this.setState({  \n      title: record.properties.title,\n      description: record.properties.description,\n      url: this.getAvatar(),\n      created: record.properties['created'],\n      contactPoint: record.properties['contactPoint'],\n      type: record.properties['type'],      \n    }); \n\n\n\n\n\n  }\n\n  getAvatar(){\n\n\n    const rnd=Math.random();\n    if (rnd < 0.2) {\n      return \"https://upload.wikimedia.org/wikipedia/en/a/a7/StanMarsh.png\";\n    } else if (rnd < 0.4) {\n      return \"https://upload.wikimedia.org/wikipedia/en/7/77/EricCartman.png\";\n    } else if (rnd < 0.6) {\n      return \"https://upload.wikimedia.org/wikipedia/en/2/25/KyleBroflovski.png\";\n    } else if (rnd < 0.8) {\n      return \"https://upload.wikimedia.org/wikipedia/en/6/6f/KennyMcCormick.png\";\n    } else {\n      return \"https://upload.wikimedia.org/wikipedia/en/a/ab/Wendy_South_Park.png\";\n    }\n  }\n\n  renderProjectItem() {\n\n    //console.log(this.props.records.features);\n    return this.state.records.map(record => {\n      return (\n        <div\n          className=\"project-item\"  key={record.id}\n          onClick={() => {\n            this.handleClick(record);\n          }}\n        >\n          <img src={this.getAvatar()} alt={record.properties.title} />\n          <h3>{record.properties.title}</h3>\n          <p>description: {record.properties.description}</p>\n          <p>contactPoint: {record.properties.contactPoint.name}</p>\n          <p>created: {record.properties['created']}</p>\n          <p>type: {record.properties['type']}</p>\n        </div>\n      );\n    });\n  }\n\n\n  render() {\n    return (\n\n      <div> \n\n        <div className=\"featured-section\">\n\n\n\n          <div id=\"feature-block\">\n\n            {/* <img id=\"feature-img\" src={this.state.url} alt={this.state.title} /> */}\n            \n            <Map ref='map' center={[38.736946, -9.142685]} zoom={11} onClick={this.addMarker}>\n              <TileLayer\n                url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png\"\n                attribution='&copy; Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n              {this.state.markers.map((position, idx) => \n              <Marker key={`marker-${idx}`} position={position}>\n                <Popup>\n                  <span>Hello world!</span>\n                </Popup>\n            </Marker>\n              )}\n          </Map>     \n            \n            \n            \n            \n            \n            <div id=\"right\">\n              <h2 id=\"feature-title\">{this.state.title}</h2>\n              <p id=\"feature-desc\">{this.state.description}</p>\n              <p id=\"feature-created\">{this.state.created}</p>\n            </div>\n          </div>\n        </div>\n        \n\n\n        <div className=\"project-search\">\n\n          <div className=\"form-inline mb-3\">\n\n          <input type=\"text\" className=\"form-control flex-primary-1\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" name=\"title\" onChange={e => this.handleInputChange(e)}/>\n          <div className=\"input-group-prepend\">\n              <button className=\"btn btn-primary ml-2\" type=\"button\" onClick={(e) => this.handleSubmit(e)}>Filter</button>\n          </div>\n\n          </div>\n          \n        </div>\n\n\n\n        <div id=\"project-grid\">{this.renderProjectItem()}</div>\n      </div>\n    );\n  }\n}\n\nexport default UserView;\n","import React from \"react\";\nimport UserView from \"./components/userView\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { records: {}};\n  }\n\n\n\n  componentDidMount() {\n    fetch(\"https://emotional.byteroad.net/collections/ec_catalog/items?f=json\")\n      .then(res => res.json())\n      .then(newRecords => {\n        // upon success, update tasks\n        this.setState({ records: newRecords });\n        //console.log(newRecords);\n      })\n      .catch(error => {\n        // upon failure, show error message\n      });\n  }\n\n  render() {\n    return (\n      <div>\n         <UserView records={this.state.records.features} projects={this.state.projects}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}