{"version":3,"sources":["components/userView.js","App.js","index.js"],"names":["baseUrl","limeOptions","color","rectangle","UserView","props","addMarker","e","console","log","markers","state","push","latlng","setState","map","mainTitle","mainDescription","mainExtent","center","records","title","description","contactPoint","type","url","filter","event","this","target","value","coords","bounds","fetch","then","res","json","metadata","drawExtent","extent","spatial","bbox","catch","error","newRecords","features","properties","propemainTitlerties","getAvatar","created","getRecords","getCollectionMetadata","Math","random","record","lat","lng","genDelta","refs","leafletElement","flyTo","rnd","className","key","id","onClick","handleClick","src","alt","name","Map","ref","zoom","whenCreated","TileLayer","attribution","Rectangle","pathOptions","placeholder","aria-label","aria-describedby","onChange","handleInputChange","handleSubmit","renderProjectItem","href","React","Component","App","projects","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6965c272.chunk.js","sourcesContent":["import React from \"react\";\n//import FeatureSection from \"./featureSection\";\nimport \"./userView.css\";\nimport \"./featureSection.css\";\nimport { Map, MapContainer, TileLayer, Marker, Popup, Rectangle } from \"react-leaflet\";\n\nconst baseUrl='https://emotional.byteroad.net';\nconst collection=\"ec_catalog\";\nconst limit=100;\nconst limeOptions = { color: 'lime' }\nconst rectangle = [\n  [0,0,\n  ],\n  [\n  0,0]\n];\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      mainTitle: \"\",\n      mainDescription: \"\",\n      mainExtent: [\n        [51.49, -0.08],\n        [51.5, -0.06],\n      ],\n      center: [0,0],\n      records: [],\n      title: \"\",\n      description: \"\",\n      contactPoint: \"\",\n      type: \"\",\n      url: \"\",\n      filter:\"\",\n      markers: []\n    };\n  }\n\n  // Add a marker to the map, by clicking on it\n  addMarker = (e) => {\n    console.log(\"comes here\");\n    const {markers} = this.state\n    markers.push(e.latlng)\n    console.log(e.latlng);\n    this.setState({markers})\n  }  \n  \n  handleInputChange(event) {\n\n    this.setState({\n      filter: event.target.value\n    });\n  }\n\n\n  drawExtent(coords){\n\n    var bounds = [[coords[1], coords[0]], [coords[3], coords[2] ]];\n    this.setState({ mainExtent: bounds});\n    this.setState({ center: [(coords[1] + coords[3])/2.0, (coords[0] + coords[2]) / 2.0] });\n\n    console.log(this.state.center);\n   \n    console.log(this.state.mainExtent);\n    console.log(rectangle);\n\n\n  }\n\n  getCollectionMetadata(url) {\n\n    fetch(url)\n      .then(res => res.json())\n      .then(metadata => {\n        // upon success, update tasks\n        this.setState({ mainTitle: metadata.title });\n        this.setState({ mainDescription: metadata.description });\n        //console.log(metadata.extent.spatial.bbox[0]);\n        this.drawExtent(metadata.extent.spatial.bbox[0]);\n      })\n      .catch(error => {\n        // upon failure, show error message\n      });\n\n    \n  }\n\n\n  getRecords(url) {\n    fetch(url)\n      .then(res => res.json())\n      .then(newRecords => {\n        // upon success, update tasks\n        this.setState({ records: newRecords.features });\n        this.setState({title: this.state.records[0].properties.title});\n        this.setState({description: this.state.records[0].propemainTitlerties.description});\n        this.setState({url: this.getAvatar()});\n        this.setState({created: this.state.records[0].properties['created']});\n        this.setState({contactPoint: this.state.records[0].properties.contactPoint});\n        this.setState({type: this.state.records[0].properties.type});\n        //console.log(this.state.records);\n      })\n      .catch(error => {\n        // upon failure, show error message\n      });\n\n    \n  }\n\n  handleSubmit() {\n    \n      // read records\n      this.getRecords(this.state.filter !== ''?\n        `${baseUrl}/collections/${collection}/items?q=${this.state.filter}`:\n        `${baseUrl}/collections/${collection}/items?limit=${limit}`);\n\n    \n  }\n\n\n  componentDidMount() {\n\n    // read title, etc\n    this.getCollectionMetadata(`${baseUrl}/collections/${collection}?f=json`);\n    this.getRecords(`${baseUrl}/collections/${collection}/items?limit=${limit}`);\n  }\n\n  genDelta() {\n\n    return Math.random();\n  }\n\n  /* step 3 */\n  handleClick(record) {\n\n/*\n    const latlng = {lat: record.geometry.coordinates[1], lng: record.geometry.coordinates[0]};\n*/\n    console.log(record);\n    const latlng = {lat: record.properties.extent.spatial.bbox[0][1], lng: record.properties.extent.spatial.bbox[0][0]+ this.genDelta()};\n    console.log(latlng);\n    //console.log(this.genDelta());\n\n    const {markers} = this.state\n    markers.push(latlng)\n    this.setState({markers})\n    let mapInst =  this.refs.map.leafletElement;\n    mapInst.flyTo(latlng, 12);\n\n    return this.setState({  \n      title: record.properties.title,\n      description: record.properties.description,\n      url: this.getAvatar(),\n      created: record.properties['created'],\n      contactPoint: record.properties['contactPoint'],\n      type: record.properties['type'],      \n    }); \n\n\n\n\n\n  }\n\n  getAvatar(){\n\n\n    const rnd=Math.random();\n    if (rnd < 0.2) {\n      return \"https://upload.wikimedia.org/wikipedia/en/a/a7/StanMarsh.png\";\n    } else if (rnd < 0.4) {\n      return \"https://upload.wikimedia.org/wikipedia/en/7/77/EricCartman.png\";\n    } else if (rnd < 0.6) {\n      return \"https://upload.wikimedia.org/wikipedia/en/2/25/KyleBroflovski.png\";\n    } else if (rnd < 0.8) {\n      return \"https://upload.wikimedia.org/wikipedia/en/6/6f/KennyMcCormick.png\";\n    } else {\n      return \"https://upload.wikimedia.org/wikipedia/en/a/ab/Wendy_South_Park.png\";\n    }\n  }\n\n  renderProjectItem() {\n\n    //console.log(this.props.records.features);\n    return this.state.records.map(record => {\n      return (\n        <div\n          className=\"project-item\"  key={record.id}\n          onClick={() => {\n            this.handleClick(record);\n          }}\n        >\n          <img src={this.getAvatar()} alt={record.properties.title} />\n          <h3>{record.properties.title}</h3>\n          <p>description: {record.properties.description}</p>\n          <p>contactPoint: {record.properties.contactPoint.name}</p>\n          <p>created: {record.properties['created']}</p>\n          <p>type: {record.properties['type']}</p>\n        </div>\n      );\n    });\n  }\n\n\n  render() {\n    return (\n\n      \n      <div> \n\n        <div className=\"card bg-dark text-white text-center\">\n          <div className=\"card-body\">\n            <h2 className=\"card-title\">{this.state.mainTitle !== \"\"? this.state.mainTitle : \"My Catalog\"}</h2>\n            <p className=\"card-text\">{this.state.mainDescription !== \"\"? this.state.mainDescription: \"This is a placeholder for the catalog description.\"}</p>\n          </div>\n        </div>\n\n        <div className=\"featured-section\">\n\n          <div id=\"feature-block\">\n            \n            <Map ref='map' center={this.state.center} zoom={7} whenCreated={map => this.setState({ map })} onClick={this.addMarker}>\n              <TileLayer\n                url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner/{z}/{x}/{y}{r}.png\"\n                attribution='&copy; Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n              />\n\n              <Rectangle bounds={this.state.mainExtent} pathOptions={limeOptions} />\n          </Map>     \n                 \n            <div id=\"right\">\n              <h2 id=\"feature-title\">{this.state.title}</h2>\n              <p id=\"feature-desc\">{this.state.description}</p>\n              <p id=\"feature-created\">{this.state.created}</p>\n            </div>\n\n          </div>\n\n\n          <div className=\"project-search\">\n          <div className=\"form-inline mb-3\">\n\n            <input type=\"text\" className=\"form-control flex-primary-1\" placeholder=\"\" aria-label=\"\" aria-describedby=\"basic-addon1\" name=\"title\" onChange={e => this.handleInputChange(e)}/>\n            <div className=\"input-group-prepend\">\n                <button className=\"btn btn-primary ml-2\" type=\"button\" onClick={(e) => this.handleSubmit(e)}>Filter</button>\n            </div>\n          </div>  \n        </div>\n\n          \n        </div>\n        \n\n\n\n\n\n\n        <div id=\"project-grid\">{this.renderProjectItem()}</div>\n\n        <footer className=\"page-footer font-small blue pt-4\">\n          <div className=\"footer-copyright text-center py-3\">Developed by ByteRoad:\n            <a href=\"/\"> ByteRoad.net</a>\n          </div>\n        </footer>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default UserView;\n","import React from \"react\";\nimport UserView from \"./components/userView\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { records: {}};\n  }\n\n\n\n  componentDidMount() {\n    fetch(\"https://emotional.byteroad.net/collections/ec_catalog/items?f=json\")\n      .then(res => res.json())\n      .then(newRecords => {\n        // upon success, update tasks\n        this.setState({ records: newRecords });\n        //console.log(newRecords);\n      })\n      .catch(error => {\n        // upon failure, show error message\n      });\n  }\n\n  render() {\n    return (\n      <div>\n         <UserView records={this.state.records.features} projects={this.state.projects}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}